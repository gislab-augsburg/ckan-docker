name: ckan-docker-ga
services:
  ckan:
    build:
      context: C:\mb\udpkatalog\lhm-gitlab\ckan-docker-ga\ckan
      dockerfile: Dockerfile
      args:
        TZ: UTC
    container_name: ckan
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      solr:
        condition: service_healthy
    environment:
      CKAN___API_TOKEN__JWT__DECODE__SECRET: string:CHANGE_ME
      CKAN___API_TOKEN__JWT__ENCODE__SECRET: string:CHANGE_ME
      CKAN___BEAKER__SESSION__SECRET: CHANGE_ME
      CKAN__DATAPUSHER__CALLBACK_URL_BASE: http://ckan:5000
      CKAN__HARVEST__MQ__HOSTNAME: redis
      CKAN__HARVEST__MQ__PORT: "6379"
      CKAN__HARVEST__MQ__REDIS_DB: "1"
      CKAN__HARVEST__MQ__TYPE: redis
      CKAN__PLUGINS: envvars image_view text_view recline_view datastore
      CKAN_CONTAINER_NAME: ckan
      CKAN_DATAPUSHER_URL: http://datapusher:8800
      CKAN_DATASTORE_READ_URL: postgresql://datastore_ro:datastore@db/datastore
      CKAN_DATASTORE_WRITE_URL: postgresql://ckan:ckan@db/datastore
      CKAN_PORT: "5000"
      CKAN_PORT_HOST: "5000"
      CKAN_REDIS_URL: redis://redis:6379/1
      CKAN_SITE_ID: default
      CKAN_SITE_URL: http://ckan-route-udpkatalog-test.apps.capk.muenchen.de
      CKAN_SMTP_MAIL_FROM: ckan@localhost
      CKAN_SMTP_PASSWORD: pass
      CKAN_SMTP_SERVER: smtp.corporateict.domain:25
      CKAN_SMTP_STARTTLS: "True"
      CKAN_SMTP_USER: user
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_SQLALCHEMY_URL: postgresql://ckan:ckan@db/ckan
      CKAN_STORAGE_PATH: /var/lib/ckan
      CKAN_SYSADMIN_EMAIL: your_email@example.com
      CKAN_SYSADMIN_NAME: ckan_admin
      CKAN_SYSADMIN_PASSWORD: test1234
      CKAN_VERSION: 2.10.0
      DATAPUSHER_CONTAINER_NAME: datapusher
      DATAPUSHER_REWRITE_RESOURCES: "True"
      DATAPUSHER_REWRITE_URL: http://ckan:5000
      DATAPUSHER_VERSION: 0.0.20
      DATASTORE_READONLY_PASSWORD: datastore
      DATASTORE_READONLY_USER: datastore_ro
      NGINX_CONTAINER_NAME: nginx
      NGINX_PORT: "1080"
      NGINX_PORT_HOST: "81"
      NGINX_SSLPORT: "1443"
      NGINX_SSLPORT_HOST: "8443"
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: ckan
      POSTGRES_USER: ckan
      POSTGRESQL_CONTAINER_NAME: db
      REDIS_CONTAINER_NAME: redis
      REDIS_VERSION: "6"
      SOLR_CONTAINER_NAME: solr
      SOLR_IMAGE_VERSION: 2.10-spatial
      TEST_CKAN_DATASTORE_READ_URL: postgresql://datastore_ro:datastore@db/datastore_test
      TEST_CKAN_DATASTORE_WRITE_URL: postgresql://ckan:ckan@db/datastore_test
      TEST_CKAN_REDIS_URL: redis://redis:6379/1
      TEST_CKAN_SOLR_URL: http://solr:8983/solr/ckan
      TEST_CKAN_SQLALCHEMY_URL: postgres://ckan:ckan@db/ckan_test
      TZ: UTC
      WORKER_CONTAINER_NAME: ckan-worker
    networks:
      default: null
    ports:
    - mode: ingress
      host_ip: 0.0.0.0
      target: 5000
      published: "5000"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: ckan_storage
      target: /var/lib/ckan
      volume: {}
  datapusher:
    container_name: datapusher
    healthcheck:
      test:
      - CMD
      - wget
      - -qO
      - /dev/null
      - datapusher:8800
    image: ckan/ckan-base-datapusher:0.0.20
    networks:
      default: null
    restart: unless-stopped
  db:
    build:
      context: C:\mb\udpkatalog\lhm-gitlab\ckan-docker-ga\postgresql
      dockerfile: Dockerfile
      args:
        DATASTORE_READONLY_PASSWORD: datastore
        POSTGRES_PASSWORD: ckan
    container_name: db
    environment:
      DATASTORE_READONLY_PASSWORD: datastore
      PGDATA: /var/lib/postgresql/data/db
      POSTGRES_PASSWORD: ckan
    healthcheck:
      test:
      - CMD
      - pg_isready
      - -U
      - ckan
    networks:
      default: null
    restart: unless-stopped
    volumes:
    - type: volume
      source: pg_data
      target: /var/lib/postgresql/data
      volume: {}
  nginx:
    build:
      context: C:\mb\udpkatalog\lhm-gitlab\ckan-docker-ga\nginx
      dockerfile: Dockerfile
    container_name: nginx
    depends_on:
      ckan:
        condition: service_healthy
    networks:
      default: null
    ports:
    - mode: ingress
      host_ip: 0.0.0.0
      target: 1080
      published: "81"
      protocol: tcp
    - mode: ingress
      host_ip: 0.0.0.0
      target: 1443
      published: "8443"
      protocol: tcp
  redis:
    container_name: redis
    healthcheck:
      test:
      - CMD
      - redis-cli
      - -e
      - QUIT
    image: redis:6
    networks:
      default: null
    restart: unless-stopped
  solr:
    container_name: solr
    environment:
      GC_TUNE: -XX:-UseLargePages
      SOLR_OPTS: -XX:-UseLargePages
    healthcheck:
      test:
      - CMD
      - wget
      - -qO
      - /dev/null
      - solr:8983/solr/
    image: ckan/ckan-solr:2.10-spatial
    networks:
      default: null
    restart: unless-stopped
    volumes:
    - type: volume
      source: solr_data
      target: /var/solr
      volume: {}
networks:
  default:
    name: ckan-docker-ga_default
volumes:
  ckan_storage:
    name: ckan-docker-ga_ckan_storage
  pg_data:
    name: ckan-docker-ga_pg_data
  solr_data:
    name: ckan-docker-ga_solr_data
